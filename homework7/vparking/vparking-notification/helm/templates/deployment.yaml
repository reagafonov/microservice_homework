{{- if .Values.startDeployment}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vparking-service.fullname" . }}
  {{- with .Values.podAnnotations}}
  annotations:
    {{- toYaml . | nindent 8 }}
  {{- end}}
  labels:
    {{- include "vparking-service.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vparking-orders.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "vparking-service.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vparking-settings.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.extraInitContainers }}
      initContainers:
        {{- if .Values.extraInitContainers }}
        {{- toYaml .Values.extraInitContainers | nindent 6 }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: "PG_CONNECTION_SERVER"
              valueFrom:
                configMapKeyRef:
                  key: db-server
                  name: config-map-{{.Values.serviceName}}
            - name: "PG_CONNECTION_PASSWORD"
              valueFrom:
                secretKeyRef:
                  key: password
                  name: {{.Values.serviceName}}-secret
            - name: "PG_CONNECTION_USER"
              valueFrom:
                configMapKeyRef:
                  key: db-username
                  name: config-map-{{.Values.serviceName}}
            - name: "SWAGGER_PREFIX"
              valueFrom:
                configMapKeyRef:
                  key: swagger-prefix
                  name: config-map-{{.Values.serviceName}}
            - name: "Kafka.BootstrapServers"
              valueFrom:
                configMapKeyRef:
                  key: kafka-server-name
                  name: config-map-{{.Values.serviceName}}
            - name: "Kafka.GroupId"
              valueFrom:
                configMapKeyRef:
                  key: kafka-groupid
                  name: config-map-{{.Values.serviceName}}
            - name: "Kafka.Topic"
              valueFrom:
                configMapKeyRef:
                  key: kafka-topic  
                  name: config-map-{{.Values.serviceName}}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- end }}