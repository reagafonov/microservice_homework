FROM cr.yandex/crpo2q44fm7kalr36b4h/dotnet-ef-9:v2 AS sdk
ARG BUILD_CONFIGURATION=Release
EXPOSE 80
WORKDIR /src
RUN mkdir /.nuget

COPY . . 

RUN dotnet restore

RUN dotnet ef migrations list --project /src/Infrastructure/Infrastructure.EntityFramework --startup-project /src/VParkingSettings --no-color --no-connect  --json >> migrations_json

FROM alpine:3.19 AS jq
RUN ["/bin/sh","-c","apk --no-cache add jq sed"]
WORKDIR /src
COPY --from=sdk /src/migrations_json /json/
RUN ["/bin/sh","-c","cat /json/migrations_json | grep -Ev '^Build started...|^Build succeeded.' | jq '.[].id' | sed 's/\"//g'  >> migrations_list"]

FROM sdk AS sdk2
COPY --from=jq /src/migrations_list /src/
RUN ["/bin/bash","-c","i=1;prev=0; for F in $(cat ./migrations_list); do dotnet ef migrations script $prev $F --no-build --project /src/Infrastructure/Infrastructure.EntityFramework --startup-project /src/VParkingSettings/ -i -o /script/$i.sql; prev=$F; ((i+=1)); done"]
RUN mkdir /escript
RUN ["/bin/sh","-c","echo \"CREATE DATABASE library2;\" >> /escript/createdb.sql"]
RUN ["/bin/sh", "-c", "echo \"CREATE EXTENSION IF NOT EXISTS pg_stat_statements\" >> /escript/extension.sql"]

FROM alpine:3.19
RUN apk --no-cache add postgresql16-client
COPY --from=sdk2 /script /script
COPY --from=sdk2 /escript /escript
ENV PG_CONNECTION_PORT=5432
ENV PG_CONNECTION_SERVER=127.0.0.1
CMD [ "/bin/sh","-c","psql postgresql://postgres:$PG_ADMIN_PASSWORD@$PG_CONNECTION_SERVER:5432/postgres -a -f /escript/extension.sql \
        && psql postgresql://$PG_CONNECTION_USER:$PG_CONNECTION_PASSWORD@$PG_CONNECTION_SERVER:5432/postgres  -a -f /escript/createdb.sql \
        && for i in $(seq 1 $(ls /script/*.sql| wc -l)); do psql postgresql://$PG_CONNECTION_USER:$PG_CONNECTION_PASSWORD@$PG_CONNECTION_SERVER:5432/library2 -a -f /script/$i.sql; done\
        && psql postgresql://postgres:$PG_ADMIN_PASSWORD@$PG_CONNECTION_SERVER:5432/library2 -a -f /escript/extension.sql"]

