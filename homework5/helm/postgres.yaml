primary:
  extendedConfiguration: |
    shared_preload_libraries = 'pg_stat_statements'  
     pg_stat_statements.max = 10000
     pg_stat_statements.track = all
postgresqlSharedPreloadLibraries: "pgaudit, pg_stat_statements"
auth:
  username: "keycloak1"
  password: 9ZuzN0KZHl
  postgresPassword: "postgres"
  enablePostgresUser: true
  
passwordUpdateJob:
  enabled: false
fullnameOverride: "db"
commonLabels: {release: "monitoring"}
metrics:
  enabled: true
  customMetrics: {
#    pg_database:
#      query: " SELECT pg_database.datname, pg_database_size(pg_database.datname) as size FROM pg_database"
#      metrics:
#        - datname:
#            usage: "LABEL"
#            description: "Name of the database"
#        - size:
#            usage: "GAUGE"
#            description: "Disk space used by the database",
#    pg_stat_statements:
#      query: "SELECT queryid, datname, left(query, 100) as short_query, sum(calls) as calls, sum(total_time) as total_time, min(min_time) as min_time, max(max_time) as max_time, sum(mean_time*calls)/sum(calls) as mean_time FROM pg_stat_statements JOIN pg_database ON pg_stat_statements.dbid = pg_database.oid group by queryid, short_query, datname"
#      metrics:
#        - queryid:
#            usage: "LABEL"
#            description: "Query ID"
#        - datname:
#            usage: "LABEL"
#            description: "Database name"
#        - short_query:
#            usage: "LABEL"
#            description: "Query limited to 100 symbols"
#        - calls:
#            usage: "COUNTER"
#            description: "Number of times executed"
#        - total_time:
#            usage: "COUNTER"
#            description: "Total time spent in the statement, in milliseconds"
#        - min_time:
#            usage: "GAUGE"
#            description: "Minimum time spent in the statement, in milliseconds"
#        - max_time:
#            usage: "GAUGE"
#            description: "Maximum time spent in the statement, in milliseconds"

  }
  service:
    ports:
      metrics: 9187
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels:
      {release: "monitoring"}
